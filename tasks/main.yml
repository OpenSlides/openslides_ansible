---
- name: Check variable openslides_secure_key
  when: not openslides_secure_key
  fail:
    msg: The variable openslides_secure_key is not set.

- name: Setup ubuntu 16.04
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "16.04"
  include: ubuntu16.04.yml

- name: Setup Archlinux
  when: ansible_distribution == "Archlinux"
  include: archlinux.yml

- name: Setup Raspbian
  when: ansible_distribution == "Debian" and ansible_distribution_major_version == "9"
  include: raspbian.yml

- name: Check Setup
  when: not openslides_distro_fround
  fail:
    msg: openslides_distro_fround

- name: Start redis
  become: yes
  service:
    name: "{{ redis_service }}"
    enabled: yes
    state: started

- name: Start PostgresQL
  become: yes
  service:
    name: postgresql
    enabled: yes
    state: started

- name: Create PostgreSQL DB
  become: yes
  become_user: postgres  # TODO: Added line for raspbian, test this with archlinux
  postgresql_db:
    name: openslides

- name: Create user openslides
  become: yes
  user:
    name: openslides
    system: yes
    createhome: no
    state: present

- name: Install openslides from pypi
  when: not openslides_use_git
  become: yes
  pip:
    name: openslides
    executable: "{{ pip_executable }}"
    state: present
    version: "{{ openslides_version }}"

- name: Create directory for openslides_repo
  when: openslides_use_git
  become: yes
  file:
    path: /var/cache/openslides_repo
    state: directory
    owner: openslides

- name: Create home directory for user openslides, npm needs it
  when: openslides_use_git
  become: yes
  file:
    path: /home/openslides
    state: directory
    owner: openslides

- name: Checkout openslides repo
  when: openslides_use_git
  become: yes
  become_user: openslides
  register: OpenSlidesGit
  git:
    repo: "{{ openslides_git_repo }}"
    dest: /var/cache/openslides_repo
    version: "{{ openslides_git_branch }}"

- name: Install npm deps (this can take some time)
  when: openslides_use_git
  become: yes
  become_user: openslides
  npm:
    path: /var/cache/openslides_repo
    ignore_scripts: yes  # The scripts have to be called manualy in case the js-files have changed.

- name: Install bower deps (this can take some time)
  when: openslides_use_git
  become: yes
  become_user: openslides
  bower:
    path: /var/cache/openslides_repo
    relative_execpath: node_modules/.bin

- name: Call gulp
  when: openslides_use_git and OpenSlidesGit.changed
  become: yes
  become_user: openslides
  command: /var/cache/openslides_repo/node_modules/.bin/gulp --production
  args:
    chdir: /var/cache/openslides_repo/

- name: Install openslides from repo (this can take some time)
  when: openslides_use_git
  become: yes
  pip:
    name: file:///var/cache/openslides_repo
    executable: "{{ pip_executable }}"
    state: present

- name: Install big mode requirements via pip for 2.3
  when: not openslides_use_git
  become: yes
  pip:
    name:
      - asgi-redis>=1.3,<1.5
      - django-redis>=4.7.0,<4.10
      - django-redis-sessions>=0.6.1,<0.7
      - psycopg2-binary>=2.7,<2.8
      - txredisapi==1.4.4
    executable: "{{ pip_executable }}"

- name: Install big mode requirements via pip for 3.x
  when: openslides_use_git
  become: yes
  pip:
    name: "{{ item }}"
    executable: "{{ pip_executable }}"
    state: latest
  with_items:
  - asgi_redis
  - django_redis
  - django-redis-sessions
  - autobahn  # this should be automaticly installed with channels. Maybe a channels bug?
  - msgpack-python  # this should be automaticly installed with channels. Maybe a channels bug?
  - six  # this should be automaticly installed with channels. Maybe a channels bug?

- name: Create settings path
  become: yes
  file:
    path: "{{ openslides_settings_path }}"
    state: directory
    mode: 0755

- name: create user data path
  become: yes
  file:
    path: "{{ openslides_user_data_path }}"
    state: directory
    mode: 0755
    owner: openslides

- name: Create Settings
  become: yes
  template:
    dest: "{{ openslides_settings_path }}/settings.py"
    src: settings.py.j2

- name: Migrate Database
  become: yes
  become_user: openslides
  register: openslidesMigratedDatabase
  command: "{{ openslides_bin }} migrate --pythonpath {{ openslides_settings_path }} --settings settings --noinput"

- name: Activate anonymous user
  when: openslidesMigratedDatabase.changed
  become: yes
  command: "{{ openslides_bin }} changeconfig --pythonpath {{ openslides_settings_path }} --settings settings general_system_enable_anonymous True"

- name: Collect Static
  become: yes
  become_user: openslides
  command: "{{ openslides_bin }} collectstatic --pythonpath {{ openslides_settings_path }} --settings settings --noinput"
  args:
    creates: "{{ openslides_user_data_path }}/collected_static/css"

- name: Create systemd units for openslides
  become: yes
  register: createServices
  template:
    dest: /etc/systemd/system/{{ item }}
    src: "{{ item }}.j2"
  with_items:
  - openslides@.service
  - openslides_worker@.service
  # See https://github.com/andrewgodwin/daphne/issues/17
  # It is in the master now. Wait for the 0.16 release
  # - openslides.socket

- name: Create nginx vhost config
  when: openslides_nginx_domains
  become: yes
  template:
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    src: nginx_vhost.conf.j2
  notify:
  - restart nginx
  with_items: "{{ openslides_nginx_domains }}"

- name: Create nginx global config
  when: openslides_nginx_global
  become: yes
  template:
    dest: /etc/nginx/nginx.conf
    src: nginx.conf.j2
  notify:
  - restart nginx

- name: Create nginx service unit for socket activation
  when: openslides_nginx_socket_activation
  become: yes
  register: createNginxService
  template:
    dest: /etc/systemd/system/nginx.service
    src: nginx.service.j2

- name: Create nginx socket
  when: openslides_nginx_socket_activation
  become: yes
  register: createNginxSocket
  template:
    dest: /etc/systemd/system/nginx.socket
    src: nginx.socket.j2

- name: Reload systemd units
  # TODO: there is a systemd module in ansible 2.2
  when: createServices.changed or createNginxService or createNginxSocket
  command: systemctl daemon-reload
  become: yes

- name: Start and enalbe openslides
  become: yes
  service:
    name: openslides@{{ item }}.service
    enabled: yes
    state: started
  with_items: "{{ openslides_ports }}"

- name: Start and enalbe nginx via socket activation
  when: openslides_nginx_socket_activation
  become: yes
  service:
    name: nginx.socket
    enabled: yes
    state: started

- name: Start and enalbe nginx without socket activation
  when: not openslides_nginx_socket_activation
  become: yes
  service:
    name: nginx.service
    enabled: yes
    state: started
